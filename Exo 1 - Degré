# -*- coding: utf-8 -*-
"""Exo 1 - Degré

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VlYwiCVA-3tS37lY_GBzrKYDF02agakq
"""

import pandas as pd
data = pd.read_csv ("celsius.csv")

data.info()

"""ici figurent les infos sur le set"""

data.head()

import seaborn as sb

sb.scatterplot(x = "celsius", y = "fahrenheit", data = data, hue = "fahrenheit", palette = "coolwarm")

"""maintenant il faut séparer caractéristiques des etiquettes"""

data["celsius"]
x = data["celsius"]
#ici on reference les celsius dans la variable x, puis fahrenheit en y
y = data["fahrenheit"]
y,x
# permet de séparer data

#il faut reshape, en passant de x fonction à x en array
type(x)
type(y)

x.values
y.values

#passer x en array permanente
x.values.reshape(-1,1)
y.values.reshape(-1,1)
x,y
#ici en effet on a fait une array d'une array, mais x et y sont devenues des array

#maintenant on stock ces information d'array dans une nouvelle variable spécifique pour ça
x_processed = x.values.reshape(-1,1)
y_processed = y.values.reshape(-1,1)

#maintenant il faut creer un modele de ces nouyvelles variables

#Il y a des trous dans y donc :

y_processed_df = pd.DataFrame(y_processed)

# Vérifier les valeurs manquantes dans le DataFrame
y_missing_df = y_processed_df.isna()
print(y_missing_df)

from sklearn.linear_model import LinearRegression
#recherche google sur la manière de faire

y_processed_df = y_processed_df.dropna()

y_processed_df = y_processed_df.reset_index(drop=True)

x_processed = x_processed[:len(y_processed_df)]

model = LinearRegression()
model.fit(x_processed, y_processed_df)

#maintenant le modele a appris on peut lui demander de predire les fahrenheit en celsuis
model.predict([[8]])

model.score(x_processed, y_processed_df)
#si on a 1 ça veut dire qu'on a une relation parfaite entre les 2 variables
#ce qui veut dire que c un modele de regression lineaire, et que les données sont parfaites
#ce qui signifie que la relation entre les 2 valeurs est parfaite
